= Introduction =

This page will contain a brief overview of building the JSF Flex code and importing the projects into an Eclipse IDE.

= Details =

==Checking out/Extracting the resources from repository==
 # Check out/extract the resources from https://jsf-flex.googlecode.com/svn/trunk/ or http://jsf-flex.googlecode.com/svn/trunk/ to a folder within the local system {i.e. C:\jsfFlexProject}

==Importing the project into Eclipse IDE==
 # Then in the folder where the resources were checked out from, simply run the following command to enable importing of the projects into an Eclipse IDE
   * mvn -D wtpversion=<WTP Version of local Eclipse> eclipse:eclipse
 # Run *mvn install* within the resource directory {i.e. C:\jsfFlexProject}

This should be enough to import the projects into Eclipse IDE.

 * Create a new workspace :
   * File => Import => Existing Projects into Workspace
   * Select the folder where the resources were checked out to {i.e. C:\jsfFlexProject}
   * Finally add the "M2_REPO" Classpath variable within the workspace by entering the following :
     * Window => Preferences => Java => Build Path => Classpath Variables
     * M2_REPO as variable and value as the maven2 repository {for me it was "C:/Documents and Settings/Administrator/.m2/repository"}

   http://jsf-flex.googlecode.com/svn/wiki/importProjects.jpg
   
   http://jsf-flex.googlecode.com/svn/wiki/M2_Repo_ClasspathVariable.jpg

 * Then for following list of maven projects, import the jars from jsf-flex-shared and jsf-flex-framework-core maven projects {Note that this should be done after the initial *mvn install* command}.
   * jsf-flex-framework-ant-flex-task-runner-impl
   * jsf-flex-framework-sdk-standard-common-task-runner-impl
   * jsf-flex-framework-velocity-file-manipulator-task-runner-impl
   
   http://jsf-flex.googlecode.com/svn/wiki/importAdditionalJars.jpg
   
   http://jsf-flex.googlecode.com/svn/wiki/attachSourceToJar.jpg
   
   http://jsf-flex.googlecode.com/svn/wiki/markRequiredJars.jpg

 * Finally in similar format as done in importing the above jars to the respective maven projects, import jar from jsf-flex-framework/annotations maven project to jsf-flex-build-plugIn-plugin and jsf-flex-framework-component15 maven projects. Now you should be in synch with the system, if not simply follow the similar procedure for the remaining maven projects such as linking jsf-flex-framework/core + jsf-flex-shared to jsf-flex-framework/component15.
   
==Testing the example pages==
Simply import the generated War file into the workspace.

==Building after code modification==
Whenever modification of the code is done and one wishes to create the Jar + War of the projects, simply run *mvn clean* then *mvn install* within the directory where the resources are checked out at {i.e. C:\jsfFlexProject}. Technically you should be able to run *mvn clean install*, but creating of the component, tags, and etcetera takes a bit of memory using the myfaces build plugIn, so it is best to run it as a separate transaction. Currently the build system is set to have max memory at 1024, but if needed in the future will modify it {though technically the desire is NOT to}.

==Directories of important artifacts==
 # Jar file of respective projects {C:\jsfFlexProject\<project>\core\target}
 # War file of an example {C:\jsfFlexProject\jsfFlex\examples\target}